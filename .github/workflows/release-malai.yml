# TODO(siddhantk232): build for windows
name: Release malai

on:
  workflow_dispatch:
    inputs:
      releaseTag:
        description: 'Release Version (will be prefixed with "malai-")'
        required: true
      productionRelease:
        type: boolean
        description: Mark release as production ready
jobs:
  release-ubuntu:
    name: Build for Linux
    # using the oldest available ubuntu on github CI to provide maximum compatibility with glibc versions
    # update MALAI_RELEASE_TEMPLATE with the glibc version
    # on ubuntu-22.04, glibc version is 2.35
    runs-on: ubuntu-22.04
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: print rustc version
        run: rustc --version
      - name: cargo build (linux)
        run: cargo build --release --bin malai
      - name: print malai version
        run: ./target/release/malai --version
      - name: print file info
        run: |
          file ./target/release/malai
          ldd ./target/release/malai
      - uses: actions/upload-artifact@v4
        with:
          name: linux_x86_64
          path: target/release/malai
  release-macos:
    name: Build for MacOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: print rustc version
        run: rustc --version
      - name: Run Build
        id: build-macos
        continue-on-error: false
        run: cargo build --release --bin malai
      - name: print malai version
        run: ./target/release/malai --version
      - name: print file info
        run: |
          file ./target/release/malai
          otool -L ./target/release/malai
      - uses: actions/upload-artifact@v4
        with:
          name: macos_x64_latest
          path: |
            target/release/malai
  create-release:
    name: Create github tag and release
    runs-on: ubuntu-latest
    needs: [ release-ubuntu, release-macos ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: macos_x64_latest
          path: ~/download/macos
      - uses: actions/download-artifact@v4
        with:
          name: linux_x86_64
          path: ~/download/linux
      - name: Rename assets
        run: |
          mv ~/download/macos/malai ~/download/macos/malai_macos_x86_64
          mv ~/download/linux/malai ~/download/linux/malai_linux_x86_64
      - name: Update .github/MALAI_RELEASE_TEMPLATE.md
        run: |
          sed -i "s/GITHUB_SHA/${GITHUB_SHA}/g" .github/MALAI_RELEASE_TEMPLATE.md
          sed -i "s/DATE/$(date)/g" .github/MALAI_RELEASE_TEMPLATE.md
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "~/download/macos/malai_macos_x86_64,~/download/linux/malai_linux_x86_64"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: malai-${{ github.event.inputs.releaseTag }}
          prerelease: ${{ github.event.inputs.productionRelease && github.event.inputs.productionRelease == 'false' }}
          bodyFile: .github/MALAI_RELEASE_TEMPLATE.md
